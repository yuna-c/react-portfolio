@import '../../../globalStyles/Variables.scss';

.Department {
	.memberBox {
		width: 100%;
		display: flex;
		justify-content: space-between;

		h2 {
			width: 20%;
			font-size: 2rem;
			font-weight: normal;
			opacity: 0.8;
		}
		.con {
			width: 75%;
			display: flex;
			flex-wrap: wrap;
			justify-content: space-between;
			border-left: 1px solid transparent;
			border-image: radial-gradient(rgba(var(--baseColor-code), 0.3) 90%, transparent) 1;
			padding-left: 80px;

			article {
				width: 31%;
				margin-bottom: 50px;

				.pic {
					width: 100%;
					height: 300px;
					margin-bottom: 10px;

					img {
						width: 100%;
						height: 100%;
						object-fit: cover;
					}
				}

				h3 {
					font-weight: bold;
					font-size: 1.4rem;
					opacity: 0.8;
					margin-bottom: 5px;
				}
			}
		}
	}

	.historyBox {
		width: 100%;
		display: flex;
		justify-content: space-between;
		margin-bottom: 200px;

		h2 {
			width: 20%;
			font-size: 2rem;
			font-weight: normal;
			opacity: 0.8;
		}
		.con {
			width: 75%;
			display: flex;
			flex-wrap: wrap;
			justify-content: space-between;
			border-left: 1px solid transparent;
			border-image: radial-gradient(rgba(var(--baseColor-code), 0.2) 90%, transparent) 1;
			padding-left: 80px;

			article {
				width: 100%;

				ul {
					font-size: 1.3rem;
					opacity: 0.8;
					margin-bottom: 40px;
					padding-top: 10px;

					li {
						font-size: 0.9rem;
						opacity: 1;
					}
				}
			}

			h3 {
				font-size: 1.4rem;
				font-weight: bold;
				opacity: 0.8;
			}
		}
	}
}

/*
react style 관련 이슈
- 리액트 컴포넌트 단위로 파일을 쪼개기 때문에 그에 따라 style.scss파일도 많아짐
- 효율적 유지보수 위해 공통으로 관리될 값들을 variable.scss에 css변수로 관리함
- 이때 scss변수가 아닌 css변수를 쓰는 이유 : 
  scss변수는 scss loader에 의해서 초기 컴파일될 때의 static하게 고정됨
- 리액트에서 이벤트 발생시 scss 변수는 변수의 값을 실시간 변경이 불가능

- 스타일 속성이 아닌 브라우저가 인지해야 되는 미디어 쿼리 구문의 디바이스 폭의 경우는 css 변수가 처리 안됨
- 미디어쿼리 디바이스폭 구문만 컴파일시 브라우저가 해석할 수 있는 변수로 적용
- 이때 발생하는 문제점 - scss변수를 읽기 위해서 각 sass파일에서 일일이 variable.scss을 import처리해야 되는 불편함
- 그래서 useStyleTheme라는 공통 파일을 적용했다
*/

@media screen and (max-width: $tablet) {
	.Department {
		.historyBox {
			display: none;
		}
	}
}
